// Setup client
	httpClient := http.DefaultClient
	likeServiceURL := fmt.Sprintf("http://localhost:%d", cfg.LikeService.Port)
	likeClient := likev1connect.NewLikeServiceClient(httpClient, likeServiceURL)

	// Prepare context with cancel (so Ctrl+C stops the stream)
	ctx, cancel := signal.NotifyContext(context.Background(), os.Interrupt, syscall.SIGTERM)
	defer cancel()

	req := connect.NewRequest(&likev1.StreamLikesRequest{
		PostId: "5cd0cb60-4d98-479a-b226-c7130362fa8b",
	})

	// Start stream
	stream, err := likeClient.StreamLikes(ctx, req)
	if err != nil {
		slog.Error("failed to start stream", "error", err)
		os.Exit(1)
	}

	// Receive updates
	for stream.Receive() {
		update := stream.Msg()
		slog.Info("like update received",
			"post_id", update.PostId,
			"total_likes", update.TotalLikes,
			"liked_at", update.LikedAt.AsTime(),
		)
	}

	// Check final error
	if err := stream.Err(); err != nil {
		slog.Error("stream ended with error", "error", err)
	}